设计模式六大原则
1.单一职责原则：就一个类而言，应该仅有一个引起它变化的原因；
2.开放封闭原则：类、模块、函数等应该是可以拓展的，但是不可修改；
3.里氏替换原则：引用所有基类（父类）的地方必须能够透明的使用其子类对象；
4.依赖倒置原则：高层模块不应该依赖底层模块，俩者都应该依赖于抽象，抽象不应该依赖于细节，细节应该依赖于抽象；
5.迪米特原则：一个软件实体应当尽可能少的与其他实体发生相互作用；
6.接口隔离原则：一个类对另一个类的依赖应该建立在最小的接口上；

设计模式分类：
1.创建型设计模式（5种）：单例模式、工厂方法模式、抽象工厂模式、建造者模式、原型模式；
2.结构型设计模式（7种）：适配器模式、装饰模式、代理模式、外观模式、桥接模式、组合模式、享元模式；
3.行为型设计模式（11）：策略模式、模板方法模式、观察者模式、迭代器模式、责任链模式、命令模式、备忘录模式、
状态模式、访问者模式、中介者模式、解释器模式；